{"version":3,"sources":["store/reducer.ts","store/index.tsx","utils/OMDbAPI.ts","components/Movies/components/Movie/index.tsx","components/Movies/index.tsx","components/Search/index.tsx","components/Favorites/index.tsx","components/Login/index.tsx","components/Header/logo.png","components/Header/index.tsx","router/PrivateRoute.tsx","router/RouterView.tsx","reportWebVitals.ts","index.tsx"],"names":["Reducer","state","action","type","loggedUser","payload","isUserAuthenticated","persistenceType","favoriteMovies","concat","filter","movie","imdbID","initialState","GlobalStore","children","useReducer","Storage","Error","fromLocalStorage","JSON","parse","localStorage","getItem","sessionStorage","initializeState","globalState","dispatch","initialRenderGlobalState","useRef","initialRenderPersistenceType","useEffect","current","getPersistenceType","setItem","stringify","removeItem","globalContext","Provider","value","createContext","API_KEY","env","getMovieByTitle","title","axios","get","Movie","useContext","useState","some","likedMovie","isMovieLiked","setMovieLiked","doubleTap","useDoubleTap","unlikeMovie","likeMovie","Col","className","Card","src","Poster","alt","Title","Body","Year","href","target","rel","icon","faImdb","size","toUpperCase","onClick","faHeartBroken","faHeart","Movies","movies","Container","Row","map","index","Search","setMovies","error","setError","searchTerm","setSearchTerm","cachedSearchTerm","setCachedSearchTerm","isLoading","setIsLoading","a","then","res","data","Response","catch","console","message","withDebounce","setTimeout","getMovie","clearTimeout","fluid","md","span","offset","InputGroup","FormControl","placeholder","onChange","event","currentTarget","Spinner","animation","role","Favorites","length","Login","email","setEmail","emailInputRef","isDisabled","focus","fakeAuth","callback","handleStorageChange","Form","onSubmit","preventDefault","Group","controlId","Label","Control","name","ref","Button","variant","disabled","radio","ToggleButton","id","checked","Header","history","useHistory","push","Navbar","collapseOnSelect","expand","Brand","logo","Toggle","Collapse","Nav","to","activeClassName","DropdownButton","menuAlign","Dropdown","Item","faDatabase","Divider","eventKey","faPowerOff","PrivateRoute","Component","component","path","pathname","exact","from","RouterView","useLocation","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","basename","process","document","getElementById"],"mappings":"wSAqCeA,EAlCC,SAACC,EAA6BC,GAC5C,OAAQA,EAAOC,MACb,IAAK,WACH,OAAO,2BACFF,GADL,IAEEG,WAAYF,EAAOG,UAEvB,IAAK,oBACH,OAAO,2BACFJ,GADL,IAEEK,oBAAqBJ,EAAOG,UAEhC,IAAK,kBACH,OAAO,2BACFJ,GADL,IAEEM,gBAAiBL,EAAOG,UAE5B,IAAK,aACH,OAAO,2BACFJ,GADL,IAEEO,eAAgBP,EAAMO,eAAeC,OAAOP,EAAOG,WAEvD,IAAK,eACH,OAAO,2BACFJ,GADL,IAEEO,eAAgBP,EAAMO,eAAeE,QAAO,SAACC,GAAD,OAAsBA,EAAMC,SAAWV,EAAOG,aAE9F,IAAK,cACH,OAAOQ,EACT,QACE,OAAOZ,I,OCzBN,SAASa,EAAT,GAA2E,IAApDC,EAAmD,EAAnDA,SAC5B,EAAgCC,qBAAWhB,EAiD7C,WAME,GAAyB,qBAAbiB,QAEV,MAAM,IAAIC,MAAM,+CAGlB,IAAMC,EAAmBC,KAAKC,MAAMC,aAAaC,QAAQ,gBAEzD,OAD2BH,KAAKC,MAAMG,eAAeD,QAAQ,iBAChCJ,GAAoBN,EA9DGY,IAApD,mBAAOC,EAAP,KAAoBC,EAApB,KACMC,EAA2BC,kBAAO,GAClCC,EAA+BD,kBAAO,GAmC5C,OAjCAE,qBAAU,WAKR,GAAIH,EAAyBI,QAC3BJ,EAAyBI,SAAU,MADrC,CAIA,IAAMC,EAAqBP,EAAYnB,gBACZ,mBAAvB0B,EACFT,eAAeU,QAAQ,cAAed,KAAKe,UAAUT,IACrB,iBAAvBO,GACTX,aAAaY,QAAQ,cAAed,KAAKe,UAAUT,OAEpD,CAACA,IAEJK,qBAAU,WAIR,GAAID,EAA6BE,QAC/BF,EAA6BE,SAAU,MADzC,CAIA,IAAMC,EAAqBP,EAAYnB,gBACZ,mBAAvB0B,EACFX,aAAac,WAAW,eACQ,iBAAvBH,GACTT,eAAeY,WAAW,kBAE3B,CAACV,EAAYnB,kBAET,cAAC8B,EAAcC,SAAf,CAAwBC,MAAO,CAAEb,cAAaC,YAA9C,SAA2DZ,IAG7D,IAAMsB,EAAgBG,wBAAc,IAE9B3B,EAAqC,CAChDL,eAAgB,GAChBF,qBAAqB,EACrBF,WAAY,GACZG,gBAAiB,kB,yGChDNkC,EAAU,W,MAAaC,EAAID,QAGjC,SAASE,EAAgBC,GAE9B,OAAOC,IAAMC,IAAN,UAJmB,+BAInB,OAA4BF,GAA5B,OAAoCH,I,oDCDtC,SAASM,EAAT,GAA6D,IAA5CpC,EAA2C,EAA3CA,MACtB,EAAkCqC,qBAAWX,GAArCX,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,SACrB,EAAsCsB,mBAW7BvB,EAAYlB,eAAe0C,MAAK,SAACC,GAAD,OAA2BA,EAAWvC,SAAWD,EAAMC,WAXhG,mBAAOwC,EAAP,KAAqBC,EAArB,KAEMC,EAAYC,wBAAa,WACxBH,EAGHI,IAFAC,OAUJ,SAASA,IACFL,IACHC,GAAc,GACd1B,EAAS,CAAExB,KAAM,aAAcE,QAASM,KAI5C,SAAS6C,IACPH,GAAc,GACd1B,EAAS,CAAExB,KAAM,eAAgBE,QAASM,EAAMC,SAGlD,OACE,cAAC8C,EAAA,EAAD,CAAKC,UAAU,uBAAf,SACE,eAACC,EAAA,EAAD,CAAMD,UAAU,GAAhB,UACE,iCAAKE,IAAKlD,EAAMmD,OAAQC,IAAKpD,EAAMqD,OAAWV,IAC9C,eAACM,EAAA,EAAKK,KAAN,WACE,oBAAIN,UAAU,aAAd,SAA4BhD,EAAMqD,QAClC,mBAAGL,UAAU,YAAb,SAA0BhD,EAAMuD,OAChC,oBAAGP,UAAU,YAAb,UACE,mBAAGQ,KAAI,qCAAgCxD,EAAMC,OAAtC,KAAiDwD,OAAO,SAASC,IAAI,aAA5E,SACE,cAAC,IAAD,CAAiBC,KAAMC,IAAQC,KAAK,SAEtC,sBAAMb,UAAU,mBAAhB,oBACChD,EAAMC,OAAO6D,oBAGhBrB,EAKA,wBAAQjD,KAAK,SAASwD,UAAU,4BAA4Bf,MAAM,SAAS8B,QAASlB,EAApF,SACE,cAAC,IAAD,CAAiBc,KAAMK,QALzB,wBAAQxE,KAAK,SAASwD,UAAU,4BAA4Bf,MAAM,OAAO8B,QAASjB,EAAlF,SACE,cAAC,IAAD,CAAiBa,KAAMM,a,OClD5B,SAASC,EAAT,GAAgE,IAA9CC,EAA6C,EAA7CA,OACvB,OACE,cAACC,EAAA,EAAD,CAAWpB,UAAU,wBAArB,SACE,cAACqB,EAAA,EAAD,CAAKrB,UAAU,gEAAf,SACGmB,EAAOG,KAAI,SAACtE,EAAYuE,GACvB,OAAO,cAACnC,EAAD,CAAkCpC,MAAOA,GAA7BA,EAAMC,OAASsE,U,OCLrC,SAASC,IACd,MAA4BlC,mBAAS,IAArC,mBAAO6B,EAAP,KAAeM,EAAf,KACA,EAA0BnC,mBAAS,IAAnC,mBAAOoC,EAAP,KAAcC,EAAd,KACA,EAAoCrC,mBAAS,IAA7C,mBAAOsC,EAAP,KAAmBC,EAAnB,KACA,EAAgDvC,mBAAS,IAAzD,mBAAOwC,EAAP,KAAyBC,EAAzB,KACA,EAAkCzC,oBAAS,GAA3C,mBAAO0C,EAAP,KAAkBC,EAAlB,KALqC,4CAuBrC,WAAwBL,GAAxB,SAAAM,EAAA,6DACED,GAAa,GACbF,EAAoBH,GAFtB,SAGQ5C,EAAgB4C,GACnBO,MAAK,SAACC,GACL,IAAMC,EAAOD,EAAIC,KACK,SAAlBA,EAAKC,UACPb,EAAUY,EAAKb,QACfG,EAAS,IACTM,GAAa,IACc,UAAlBI,EAAKC,WACdX,EAASU,EAAK9E,OACd0E,GAAa,OAGhBM,OAAM,SAACb,GACNc,QAAQd,MAAMA,GACdC,EAASD,EAAMe,SACfR,GAAa,MAlBnB,4CAvBqC,sBA6CrC,OAtCA7D,qBAAU,WAGR,IAAMsE,EAAeC,YAAW,WAC9B,GAAIf,IAAeE,GAAmC,KAAfF,EACrC,OAZ+B,2CAYxBgB,CAAShB,KAEjB,KACH,OAAO,kBAAMiB,aAAaH,MAEzB,CAACd,IA6BF,eAACR,EAAA,EAAD,CAAW0B,MAAM,KAAK9C,UAAU,wBAAhC,UACE,eAACqB,EAAA,EAAD,WACE,cAACtB,EAAA,EAAD,CAAKgD,GAAI,CAAEC,KAAM,EAAGC,OAAQ,GAAKjD,UAAU,qCAA3C,SACE,eAACkD,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAaC,YAAY,kBAAkBpD,UAAU,YAAYqD,SA/B3E,SAAsBC,GACpBzB,EAAcyB,EAAMC,cAAc3E,UA+BzBoD,EACC,cAACwB,EAAA,EAAD,CAASC,UAAU,SAASC,KAAK,SAAjC,SACE,sBAAM1D,UAAU,SAAhB,0BAEA,UAGR,cAACD,EAAA,EAAD,CAAKgD,GAAI,CAAEC,KAAM,EAAGC,OAAQ,GAAKjD,UAAU,qCAA3C,SACE,mBAAGA,UAAU,gBAAb,SAA8B0B,SAGlC,cAACR,EAAD,CAAQC,OAAQA,OC/Df,SAASwC,IACd,IAAQ5F,EAAgBsB,qBAAWX,GAA3BX,YAER,OACE,eAACgC,EAAA,EAAD,WACE,cAACsB,EAAA,EAAD,CAAKrB,UAAU,qCAAf,SACyC,IAAtCjC,EAAYlB,eAAe+G,OAAe,2DAAuC,OAEpF,cAAC1C,EAAD,CAAQC,OAAQpD,EAAYlB,oB,qCCR3B,SAASgH,IACd,MAAkCxE,qBAAWX,GAArCX,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,SACrB,EAAkCsB,oBAAS,GAA3C,mBAAO0C,EAAP,KAAkBC,EAAlB,KACA,EAA0B3C,mBAAS,IAAnC,mBAAOwE,EAAP,KAAcC,EAAd,KAKMC,EAAgB9F,iBAAyB,MAEzC+F,EAAuB,KAAVH,EAEnB1F,qBAAU,WACJ4F,EAAc3F,SAAS2F,EAAc3F,QAAQ6F,UAChD,IAEH,IAAMC,EAAW,SACFC,GACXzB,WAAWyB,EAAU,MAazB,SAASC,EAAoBf,GAC3BtF,EAAS,CAAExB,KAAM,kBAAmBE,QAAS4G,EAAMC,cAAc3E,QAQnE,OACE,cAACwC,EAAA,EAAD,CAAW0B,MAAM,KAAK9C,UAAU,yDAAhC,SACE,cAACD,EAAA,EAAD,CAAKC,UAAU,+CAAf,SACE,eAACsE,EAAA,EAAD,CAAMC,SArBZ,SAAwBjB,GACtBA,EAAMkB,iBACNvC,GAAa,GACbkC,GAAsB,WACpBnG,EAAS,CAAExB,KAAM,WAAYE,QAASoH,IACtC9F,EAAS,CAAExB,KAAM,oBAAqBE,SAAS,QAgB7C,UACE,eAAC4H,EAAA,EAAKG,MAAN,CAAYzE,UAAU,OAAO0E,UAAU,QAAvC,UACE,cAACJ,EAAA,EAAKK,MAAN,oBACA,cAACL,EAAA,EAAKM,QAAN,CACEpI,KAAK,QACLqI,KAAK,QACLC,IAAKd,EACLpF,MAAOkF,EACPjD,KAAK,KACLwC,SAhBZ,SAA2BC,GACzBS,EAAST,EAAMC,cAAc3E,aAkBvB,cAACmB,EAAA,EAAD,CAAKC,UAAU,qCAAf,SACE,cAAC+E,EAAA,EAAD,CAAQvI,KAAK,SAASqE,KAAK,KAAKmE,QAAQ,OAAOC,SAAUhB,EAAzD,SACE,+BAAOjC,EAAY,cAACwB,EAAA,EAAD,CAASC,UAAU,OAAOuB,QAAQ,QAAQnE,KAAK,OAAU,cAGhF,cAACQ,EAAA,EAAD,CAAKrB,UAAU,qCAAf,SACE,eAACD,EAAA,EAAD,CAAKC,UAAU,yBAAf,UACE,cAACqB,EAAA,EAAD,CAAKrB,UAAU,gCAAf,SACE,cAACsE,EAAA,EAAKK,MAAN,CAAY3E,UAAU,kBAAtB,mCAEF,cAACqB,EAAA,EAAD,CAAKrB,UAAU,gCAAf,SA7DW,CACrB,CAAE6E,KAAM,UAAWjG,MAAO,kBAC1B,CAAEiG,KAAM,QAASjG,MAAO,iBA4DI0C,KAAI,SAAC4D,EAAO3D,GAAR,OAClB,cAAC4D,EAAA,EAAD,CAEEC,GAAE,gBAAW7D,GACb/E,KAAK,QACLqE,KAAK,KACLmE,QAAQ,oBACRH,KAAK,QACL7E,UAAqB,IAAVuB,EAAc,OAAS,GAClC3C,MAAOsG,EAAMtG,MACbyG,QAASH,EAAMtG,QAAUb,EAAYnB,gBACrCyG,SAAUgB,EAVZ,SAYE,qCAAQa,EAAML,SAXTtD,oB,uCCzEV,G,OAAA,IAA0B,kCCSlC,SAAS+D,IACd,MAAkCjG,qBAAWX,GAArCX,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,SACfuH,EAAUC,cAFqB,4CAIrC,sBAAAtD,EAAA,sEACQlE,EAAS,CAAExB,KAAM,gBADzB,gCAES+I,EAAQE,KAAK,WAFtB,4CAJqC,sBASrC,OACE,eAACC,EAAA,EAAD,CAAQC,kBAAgB,EAACC,OAAO,KAAKZ,QAAQ,OAAOhF,UAAU,SAA9D,UACE,eAAC0F,EAAA,EAAOG,MAAR,WACE,qBAAK3F,IAAK4F,EAAM1F,IAAI,OAAOJ,UAAU,SACrC,uBAAMA,UAAU,QAAhB,kBACO,sBAAMA,UAAU,mBAAhB,uBAGT,cAAC0F,EAAA,EAAOK,OAAR,CAAe,gBAAc,0BAC7B,eAACL,EAAA,EAAOM,SAAR,CAAiBZ,GAAG,wBAApB,UACE,eAACa,EAAA,EAAD,CAAKjG,UAAU,UAAf,UACE,cAAC,IAAD,CAASkG,GAAG,UAAUC,gBAAgB,SAASnG,UAAU,OAAzD,SACE,4CAEF,cAAC,IAAD,CAASkG,GAAG,aAAaC,gBAAgB,SAAzC,SACE,kDAGHpI,EAAYtB,WACX,cAACwJ,EAAA,EAAD,UACE,eAACG,EAAA,EAAD,CAAgBpB,QAAQ,OAAOqB,UAAU,QAAQxF,KAAK,KAAK5B,MAAOlB,EAAYtB,WAAY2I,GAAG,YAA7F,UACE,eAACkB,EAAA,EAASC,KAAV,WACE,cAAC,IAAD,CAAiB5F,KAAM6F,MACU,mBAAhCzI,EAAYnB,gBAAuC,kBAAoB,mBAE1E,cAAC0J,EAAA,EAASG,QAAV,IACA,eAACH,EAAA,EAASC,KAAV,CAAeG,SAAS,IAAI3F,QAnCH,2CAmCzB,UACE,cAAC,IAAD,CAAiBJ,KAAMgG,MADzB,kBAKF,WC5CL,SAASC,EAAT,GAAgH,IAA7EC,EAA4E,EAAvFC,UAAsBC,EAAiE,EAAjEA,KAAMC,EAA2D,EAA3DA,SAAUC,EAAiD,EAAjDA,MAC3DlJ,EAAgBsB,qBAAWX,GAA3BX,YAER,OACE,cAAC,IAAD,uCAAWgJ,GAAUE,GAArB,aACGlJ,EAAYpB,oBAAsB,cAACkK,EAAD,IAAgB,cAAC,IAAD,CAAUX,GAAG,SAASgB,KAAMF,OCA9E,SAASG,IACd,IAAQpJ,EAAgBsB,qBAAWX,GAA3BX,YAEAiJ,EADSI,cACTJ,SAER,OACE,cAAC5F,EAAA,EAAD,CAAW0B,OAAK,EAAC9C,UAAU,MAA3B,SACE,eAAC,IAAD,WACE,cAACsF,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAO2B,OAAK,EAACF,KAAK,IAAlB,SACE,cAAC,IAAD,CAAUb,GAAG,aAEf,cAACU,EAAD,CAAcK,OAAK,EAACF,KAAK,UAAUC,SAAUA,EAAUF,UAAWtF,IAClE,cAACoF,EAAD,CAAcK,OAAK,EAACF,KAAK,aAAaC,SAAUA,EAAUF,UAAWnD,IACrE,cAAC,IAAD,CAAOsD,OAAK,EAACF,KAAK,SAAlB,SACGhJ,EAAYpB,oBAAsB,cAAC,IAAD,CAAUuJ,GAAG,aAAagB,KAAMF,IAAe,cAACnD,EAAD,cCxB9F,IAYewD,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBpF,MAAK,YAAkD,IAA/CqF,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC5K,EAAD,UACE,cAAC,IAAD,CAAQ6K,SAAUC,aAAlB,SACE,cAACd,EAAD,UAINe,SAASC,eAAe,SAM1Bd,K","file":"static/js/main.c50e67c5.chunk.js","sourcesContent":["import { ActionType, GlobalStateInterface, MovieType } from './types';\nimport { initialState } from './index';\n\nconst Reducer = (state: GlobalStateInterface, action: ActionType): any => {\n  switch (action.type) {\n    case 'SET_USER':\n      return {\n        ...state,\n        loggedUser: action.payload,\n      };\n    case 'AUTHENTICATE_USER':\n      return {\n        ...state,\n        isUserAuthenticated: action.payload,\n      };\n    case 'SET_PERSISTENCE':\n      return {\n        ...state,\n        persistenceType: action.payload,\n      };\n    case 'LIKE_MOVIE':\n      return {\n        ...state,\n        favoriteMovies: state.favoriteMovies.concat(action.payload),\n      };\n    case 'UNLIKE_MOVIE':\n      return {\n        ...state,\n        favoriteMovies: state.favoriteMovies.filter((movie: MovieType) => movie.imdbID !== action.payload),\n      };\n    case 'PURGE_STATE':\n      return initialState;\n    default:\n      return state;\n  }\n};\n\nexport default Reducer;\n","import React, { createContext, ReactElement, ReactNode, useEffect, useReducer, useRef } from 'react';\nimport Reducer from './reducer';\nimport { ContextType, GlobalStateInterface } from './types';\n\n/**\n * React Context-based Global Store with a reducer\n * and persistent saves to sessionStorage/localStorage\n **/\nexport function GlobalStore({ children }: { children: ReactNode }): ReactElement {\n  const [globalState, dispatch] = useReducer(Reducer, initializeState());\n  const initialRenderGlobalState = useRef(true);\n  const initialRenderPersistenceType = useRef(true);\n\n  useEffect(() => {\n    /*\n     populate either sessionStorage or localStorage\n     data from globalState based on persistenceType\n    */\n    if (initialRenderGlobalState.current) {\n      initialRenderGlobalState.current = false;\n      return;\n    }\n    const getPersistenceType = globalState.persistenceType;\n    if (getPersistenceType === 'sessionStorage') {\n      sessionStorage.setItem('globalState', JSON.stringify(globalState));\n    } else if (getPersistenceType === 'localStorage') {\n      localStorage.setItem('globalState', JSON.stringify(globalState));\n    }\n  }, [globalState]);\n\n  useEffect(() => {\n    /*\n     purge sessionStorage or localStorage when either is selected\n    */\n    if (initialRenderPersistenceType.current) {\n      initialRenderPersistenceType.current = false;\n      return;\n    }\n    const getPersistenceType = globalState.persistenceType;\n    if (getPersistenceType === 'sessionStorage') {\n      localStorage.removeItem('globalState');\n    } else if (getPersistenceType === 'localStorage') {\n      sessionStorage.removeItem('globalState');\n    }\n  }, [globalState.persistenceType]);\n\n  return <globalContext.Provider value={{ globalState, dispatch }}>{children}</globalContext.Provider>;\n}\n\nexport const globalContext = createContext({} as ContextType);\n\nexport const initialState: GlobalStateInterface = {\n  favoriteMovies: [],\n  isUserAuthenticated: false,\n  loggedUser: '',\n  persistenceType: 'sessionStorage',\n};\n\nfunction initializeState() {\n  /*\n   the order in which the the data is compared is very important;\n   first try to populate the state from Storage if not return initialState\n  */\n\n  if (typeof (Storage) !== 'undefined') {\n  } else {\n    throw new Error('You need to enable Storage to run this app.');\n  }\n\n  const fromLocalStorage = JSON.parse(localStorage.getItem('globalState') as string);\n  const fromSessionStorage = JSON.parse(sessionStorage.getItem('globalState') as string);\n  return fromSessionStorage || fromLocalStorage || initialState;\n}\n","import axios from 'axios';\nimport env from 'react-dotenv';\n\n/** OMDb API\n *  The Open Movie Database\n *  http://www.omdbapi.com/#parameters\n **/\nexport const API_KEY = '&apikey=' + env.API_KEY;\nexport const API_ENDPOINT = 'https://www.omdbapi.com/?s=';\n\nexport function getMovieByTitle(title: string) {\n  // handle promise response at the corresponding component\n  return axios.get(`${API_ENDPOINT}${title}${API_KEY}`);\n}\n","import React, { ReactElement, useContext, useState } from 'react';\nimport { Card, Col } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faImdb } from '@fortawesome/free-brands-svg-icons';\nimport { faHeart, faHeartBroken } from '@fortawesome/free-solid-svg-icons';\nimport { useDoubleTap } from 'use-double-tap';\nimport { MovieType } from '../../../../store/types';\nimport { MovieComponentType } from './types';\nimport { globalContext } from '../../../../store';\nimport './styles.scss';\n\nexport function Movie({ movie }: MovieComponentType): ReactElement {\n  const { globalState, dispatch } = useContext(globalContext);\n  const [isMovieLiked, setMovieLiked] = useState(isMovieInFavorites());\n\n  const doubleTap = useDoubleTap(() => {\n    if (!isMovieLiked) {\n      likeMovie();\n    } else {\n      unlikeMovie();\n    }\n  });\n\n  function isMovieInFavorites() {\n    return globalState.favoriteMovies.some((likedMovie: MovieType) => likedMovie.imdbID === movie.imdbID);\n  }\n\n  function likeMovie() {\n    if (!isMovieLiked) {\n      setMovieLiked(true);\n      dispatch({ type: 'LIKE_MOVIE', payload: movie });\n    }\n  }\n\n  function unlikeMovie() {\n    setMovieLiked(false);\n    dispatch({ type: 'UNLIKE_MOVIE', payload: movie.imdbID });\n  }\n\n  return (\n    <Col className=\"mb-4 movie-container\">\n      <Card className=\"\">\n        <img src={movie.Poster} alt={movie.Title} {...doubleTap} />\n        <Card.Body>\n          <h5 className=\"card-title\">{movie.Title}</h5>\n          <p className=\"card-text\">{movie.Year}</p>\n          <p className=\"card-text\">\n            <a href={`https://www.imdb.com/title/${movie.imdbID}/`} target=\"_blank\" rel=\"noreferrer\">\n              <FontAwesomeIcon icon={faImdb} size=\"4x\" />\n            </a>\n            <span className=\"font-weight-bold\">IMDb: </span>\n            {movie.imdbID.toUpperCase()}\n          </p>\n        </Card.Body>\n        {!isMovieLiked ? (\n          <button type=\"button\" className=\"btn btn-danger remove-btn\" title=\"Like\" onClick={likeMovie}>\n            <FontAwesomeIcon icon={faHeart} />\n          </button>\n        ) : (\n          <button type=\"button\" className=\"btn btn-secondary fav-btn\" title=\"Unlike\" onClick={unlikeMovie}>\n            <FontAwesomeIcon icon={faHeartBroken} />\n          </button>\n        )}\n      </Card>\n    </Col>\n  );\n}\n","import React, { ReactElement } from 'react';\nimport { Container, Row } from 'react-bootstrap';\nimport { Movie } from './components/Movie';\nimport { MoviesComponentType } from './types';\nimport './styles.scss';\n\nexport function Movies({ movies }: MoviesComponentType): ReactElement {\n  return (\n    <Container className=\"main-movies-container\">\n      <Row className=\"d-flex mt-4 flex-wrap justify-content-start align-items-start\">\n        {movies.map((movie: any, index: number) => {\n          return <Movie key={movie.imdbID + index} movie={movie} />;\n        })}\n      </Row>\n    </Container>\n  );\n}\n","import React, { ReactElement, useEffect, useState } from 'react';\nimport { Col, Container, FormControl, InputGroup, Row, Spinner } from 'react-bootstrap';\nimport { getMovieByTitle } from '../../utils/OMDbAPI';\nimport { Movies } from '../Movies';\nimport './styles.scss';\n\nexport function Search(): ReactElement {\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState('');\n  const [searchTerm, setSearchTerm] = useState('');\n  const [cachedSearchTerm, setCachedSearchTerm] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    // debounce the GET request by some time before the user decides the search term\n    // as the user types the states gets updated and clears the previous set timer\n    const withDebounce = setTimeout(() => {\n      if (searchTerm !== cachedSearchTerm && searchTerm !== '') {\n        return getMovie(searchTerm);\n      }\n    }, 600);\n    return () => clearTimeout(withDebounce);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [searchTerm]);\n\n  function handleChange(event: React.ChangeEvent<HTMLInputElement>) {\n    setSearchTerm(event.currentTarget.value);\n  }\n\n  async function getMovie(searchTerm: string) {\n    setIsLoading(true);\n    setCachedSearchTerm(searchTerm);\n    await getMovieByTitle(searchTerm)\n      .then((res: any) => {\n        const data = res.data;\n        if (data.Response === 'True') {\n          setMovies(data.Search);\n          setError('');\n          setIsLoading(false);\n        } else if (data.Response === 'False') {\n          setError(data.Error);\n          setIsLoading(false);\n        }\n      })\n      .catch((error) => {\n        console.error(error);\n        setError(error.message);\n        setIsLoading(false);\n      });\n  }\n\n  return (\n    <Container fluid=\"xl\" className=\"mt-4 search-container\">\n      <Row>\n        <Col md={{ span: 6, offset: 3 }} className=\"d-flex justify-content-center mt-3\">\n          <InputGroup>\n            <FormControl placeholder=\"Search by title\" className=\"rounded-0\" onChange={handleChange} />\n            {isLoading ? (\n              <Spinner animation=\"border\" role=\"status\">\n                <span className=\"d-none\">Loading...</span>\n              </Spinner>\n            ) : null}\n          </InputGroup>\n        </Col>\n        <Col md={{ span: 6, offset: 3 }} className=\"d-flex justify-content-center mt-3\">\n          <p className=\"error-message\">{error}</p>\n        </Col>\n      </Row>\n      <Movies movies={movies} />\n    </Container>\n  );\n}\n","import React, { ReactElement, useContext } from 'react';\nimport { Col, Row } from 'react-bootstrap';\nimport { globalContext } from '../../store';\nimport { Movies } from '../Movies';\n\nexport function Favorites(): ReactElement {\n  const { globalState } = useContext(globalContext);\n\n  return (\n    <Col>\n      <Row className=\"d-flex justify-content-center mt-3\">\n        {globalState.favoriteMovies.length === 0 ? <span>Please like some movies</span> : null}\n      </Row>\n      <Movies movies={globalState.favoriteMovies} />\n    </Col>\n  );\n}\n","import React, { ReactElement, useContext, useEffect, useRef, useState } from 'react';\nimport { Button, Col, Container, Form, Row, Spinner, ToggleButton } from 'react-bootstrap';\nimport './styles.scss';\nimport { globalContext } from '../../store';\n\nexport function Login(): ReactElement {\n  const { globalState, dispatch } = useContext(globalContext);\n  const [isLoading, setIsLoading] = useState(false);\n  const [email, setEmail] = useState('');\n  const storageOptions = [\n    { name: 'Session', value: 'sessionStorage' },\n    { name: 'Local', value: 'localStorage' },\n  ];\n  const emailInputRef = useRef<HTMLInputElement>(null);\n\n  const isDisabled = email === '';\n\n  useEffect(() => {\n    if (emailInputRef.current) emailInputRef.current.focus();\n  }, []);\n\n  const fakeAuth = {\n    authenticate(callback: () => void) {\n      setTimeout(callback, 900);\n    },\n  };\n\n  function handleOnSubmit(event: React.FormEvent) {\n    event.preventDefault();\n    setIsLoading(true);\n    fakeAuth.authenticate(() => {\n      dispatch({ type: 'SET_USER', payload: email });\n      dispatch({ type: 'AUTHENTICATE_USER', payload: true });\n    });\n  }\n\n  function handleStorageChange(event: React.ChangeEvent<HTMLInputElement>) {\n    dispatch({ type: 'SET_PERSISTENCE', payload: event.currentTarget.value });\n  }\n\n\n  function handleEmailChange(event: React.ChangeEvent<HTMLInputElement>) {\n    setEmail(event.currentTarget.value);\n  }\n\n  return (\n    <Container fluid='sm' className='login-container d-flex justify-content-center mt-4 p-0'>\n      <Col className='border border-secondary rounded p-4 col-sm-6'>\n        <Form onSubmit={handleOnSubmit}>\n          <Form.Group className='mb-3' controlId='email'>\n            <Form.Label>Email</Form.Label>\n            <Form.Control\n              type='email'\n              name='email'\n              ref={emailInputRef}\n              value={email}\n              size='sm'\n              onChange={handleEmailChange}\n            />\n          </Form.Group>\n          <Col className='d-flex justify-content-center mt-2'>\n            <Button type='submit' size='sm' variant='info' disabled={isDisabled}>\n              <span>{isLoading ? <Spinner animation='grow' variant='light' size='sm' /> : 'START'}</span>\n            </Button>\n          </Col>\n          <Row className='d-flex justify-content-center mt-2'>\n            <Col className='mb-3 storage-container'>\n              <Row className='d-flex justify-content-center'>\n                <Form.Label className='mb-0 text-label'>Storage Persistence</Form.Label>\n              </Row>\n              <Row className='d-flex justify-content-center'>\n                {storageOptions.map((radio, index) => (\n                  <ToggleButton\n                    key={index}\n                    id={`radio-${index}`}\n                    type='radio'\n                    size='sm'\n                    variant='outline-secondary'\n                    name='radio'\n                    className={index === 0 ? 'mr-2' : ''}\n                    value={radio.value}\n                    checked={radio.value === globalState.persistenceType}\n                    onChange={handleStorageChange}\n                  >\n                    <span> {radio.name}</span>\n                  </ToggleButton>\n                ))}\n              </Row>\n            </Col>\n          </Row>\n        </Form>\n      </Col>\n    </Container>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/logo.4562cdbe.png\";","import React, { ReactElement, useContext } from 'react';\nimport { NavLink, useHistory } from 'react-router-dom';\nimport { Dropdown, DropdownButton, Nav, Navbar } from 'react-bootstrap';\nimport { faDatabase, faPowerOff } from '@fortawesome/free-solid-svg-icons';\nimport { globalContext } from '../../store';\nimport './styles.scss';\nimport logo from './logo.png';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nexport function Header(): ReactElement {\n  const { globalState, dispatch } = useContext(globalContext);\n  const history = useHistory();\n\n  async function handleLogout() {\n    await dispatch({ type: 'PURGE_STATE' });\n    return history.push('/login');\n  }\n\n  return (\n    <Navbar collapseOnSelect expand=\"md\" variant=\"dark\" className=\"header\">\n      <Navbar.Brand>\n        <img src={logo} alt=\"logo\" className=\"logo\" />\n        <span className=\"brand\">\n          Movie<span className=\"font-weight-bold\">Lab</span>\n        </span>\n      </Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n      <Navbar.Collapse id=\"responsive-navbar-nav\">\n        <Nav className=\"mr-auto\">\n          <NavLink to=\"/search\" activeClassName=\"active\" className=\"mr-3\">\n            <span>Search</span>\n          </NavLink>\n          <NavLink to=\"/favorites\" activeClassName=\"active\">\n            <span>Favorites</span>\n          </NavLink>\n        </Nav>\n        {globalState.loggedUser ? (\n          <Nav>\n            <DropdownButton variant=\"info\" menuAlign=\"right\" size=\"sm\" title={globalState.loggedUser} id=\"user-menu\">\n              <Dropdown.Item>\n                <FontAwesomeIcon icon={faDatabase} />\n                {globalState.persistenceType === 'sessionStorage' ? 'Session Storage' : 'Local Storage'}\n              </Dropdown.Item>\n              <Dropdown.Divider />\n              <Dropdown.Item eventKey=\"1\" onClick={handleLogout}>\n                <FontAwesomeIcon icon={faPowerOff} /> Logout\n              </Dropdown.Item>\n            </DropdownButton>\n          </Nav>\n        ) : null}\n      </Navbar.Collapse>\n    </Navbar>\n  );\n}\n","import React, { ReactElement, useContext } from 'react';\nimport { Redirect, Route } from 'react-router-dom';\nimport { globalContext } from '../store';\nimport { PrivateRouteComponentType } from './types';\n\nexport function PrivateRoute({ component: Component, path, pathname, exact}: PrivateRouteComponentType): ReactElement {\n  const { globalState } = useContext(globalContext);\n\n  return (\n    <Route {...path} {...exact}>\n      {globalState.isUserAuthenticated ? <Component /> : <Redirect to=\"/login\" from={pathname} />}\n    </Route>\n  );\n}\n","import React, { ReactElement, useContext } from 'react';\nimport { HashRouter, Redirect, Route, Switch, useLocation } from 'react-router-dom';\nimport { Container } from 'react-bootstrap';\nimport { Search } from '../components/Search';\nimport { Favorites } from '../components/Favorites';\nimport { Login } from '../components/Login';\nimport { Header } from '../components/Header';\nimport { PrivateRoute } from './PrivateRoute';\nimport { globalContext } from '../store';\n\nexport function RouterView(): ReactElement {\n  const { globalState } = useContext(globalContext);\n  const location = useLocation();\n  const { pathname } = location;\n\n  return (\n    <Container fluid className=\"p-0\">\n      <HashRouter>\n        <Header />\n        <Switch>\n          <Route exact path=\"/\">\n            <Redirect to=\"/login\" />\n          </Route>\n          <PrivateRoute exact path=\"/search\" pathname={pathname} component={Search} />\n          <PrivateRoute exact path=\"/favorites\" pathname={pathname} component={Favorites} />\n          <Route exact path=\"/login\">\n            {globalState.isUserAuthenticated ? <Redirect to=\"/favorites\" from={pathname} /> : <Login />}\n          </Route>\n        </Switch>\n      </HashRouter>\n    </Container>\n  );\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport './styles/globalStylesheet.scss';\nimport { GlobalStore } from './store';\nimport { RouterView } from './router/RouterView';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <GlobalStore>\n      <Router basename={process.env.PUBLIC_URL}>\n        <RouterView />\n      </Router>\n    </GlobalStore>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
{"version":3,"sources":["store/reducer.ts","store/index.tsx","utils/OMDbAPI.ts","components/Movies/components/Movie/index.tsx","components/Movies/index.tsx","components/Search/index.tsx","components/Favorites/index.tsx","components/Login/formModel.ts","components/Login/index.tsx","components/Header/logo.png","components/Header/index.tsx","router/PrivateRoute.tsx","router/RouterView.tsx","reportWebVitals.ts","index.tsx"],"names":["Reducer","state","action","type","loggedUser","payload","isUserAuthenticated","persistenceType","favoriteMovies","concat","filter","movie","imdbID","initialState","GlobalStore","children","useReducer","fromLocalStorage","JSON","parse","localStorage","getItem","sessionStorage","initializeState","globalState","dispatch","useEffect","getPersistenceType","setItem","stringify","removeItem","globalContext","Provider","value","createContext","API_KEY","env","getMovieByTitle","title","axios","get","Movie","useContext","useState","some","likedMovie","isMovieLiked","setMovieLiked","doubleTap","useDoubleTap","unlikeMovie","likeMovie","Col","className","Card","src","Poster","alt","Title","Body","Year","href","target","rel","icon","faImdb","size","toUpperCase","onClick","faHeartBroken","faHeart","Movies","movies","Container","Row","map","index","Search","setMovies","error","setError","searchTerm","setSearchTerm","cachedSearchTerm","setCachedSearchTerm","isLoading","setIsLoading","a","then","res","data","Response","Error","catch","console","message","withDebounce","setTimeout","getMovie","clearTimeout","fluid","md","span","offset","InputGroup","FormControl","placeholder","onChange","event","currentTarget","Spinner","animation","role","Favorites","length","formModel","email","required","passphrase","validator","Login","emailInputRef","useRef","useForm","fakeAuth","values","errors","handleOnChange","handleOnSubmit","isDisabled","current","focus","callback","handleChange","Form","onSubmit","Group","controlId","Label","Control","name","ref","isInvalid","hasError","Feedback","Button","variant","disabled","radio","ToggleButton","id","checked","Header","history","useHistory","push","Navbar","collapseOnSelect","expand","Brand","logo","Toggle","Collapse","Nav","to","activeClassName","DropdownButton","menuAlign","Dropdown","Item","faDatabase","Divider","eventKey","faPowerOff","PrivateRoute","Component","component","path","exact","pathname","from","RouterView","useLocation","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","basename","document","getElementById"],"mappings":"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","file":"static/js/main.d93c50c9.chunk.js","sourcesContent":["import { ActionType, GlobalStateInterface, MovieType } from './types';\nimport { initialState } from './index';\n\nconst Reducer = (state: GlobalStateInterface, action: ActionType): any => {\n  switch (action.type) {\n    case 'SET_USER':\n      return {\n        ...state,\n        loggedUser: action.payload,\n      };\n    case 'AUTHENTICATE_USER':\n      return {\n        ...state,\n        isUserAuthenticated: action.payload,\n      };\n    case 'SET_PERSISTENCE':\n      return {\n        ...state,\n        persistenceType: action.payload,\n      };\n    case 'LIKE_MOVIE':\n      return {\n        ...state,\n        favoriteMovies: state.favoriteMovies.concat(action.payload),\n      };\n    case 'UNLIKE_MOVIE':\n      return {\n        ...state,\n        favoriteMovies: state.favoriteMovies.filter((movie: MovieType) => movie.imdbID !== action.payload),\n      };\n    case 'PURGE_STATE':\n      return initialState;\n    default:\n      return state;\n  }\n};\n\nexport default Reducer;\n","import React, { createContext, ReactElement, ReactNode, useEffect, useReducer } from 'react';\nimport Reducer from './reducer';\nimport { ContextType, GlobalStateInterface } from './types';\n\n/**\n * React Context-based Global Store with a reducer\n * and persistent saves to sessionStorage/localStorage\n **/\nexport function GlobalStore({ children }: { children: ReactNode }): ReactElement {\n  const [globalState, dispatch] = useReducer(Reducer, initializeState());\n\n  useEffect(() => {\n    /*\n     populate either sessionStorage or localStorage data from globalState based on persistenceType\n     and purge sessionStorage or localStorage globalState key/value pair when either is selected\n    */\n    const getPersistenceType = globalState.persistenceType;\n    if (getPersistenceType === 'sessionStorage') {\n      sessionStorage.setItem('globalState', JSON.stringify(globalState));\n      localStorage.removeItem('globalState');\n    } else if (getPersistenceType === 'localStorage') {\n      localStorage.setItem('globalState', JSON.stringify(globalState));\n      sessionStorage.removeItem('globalState');\n    }\n  }, [globalState]);\n\n  return <globalContext.Provider value={{ globalState, dispatch }}>{children}</globalContext.Provider>;\n}\n\nexport const globalContext = createContext({} as ContextType);\n\nexport const initialState: GlobalStateInterface = {\n  favoriteMovies: [],\n  isUserAuthenticated: false,\n  loggedUser: '',\n  persistenceType: 'sessionStorage',\n};\n\nfunction initializeState() {\n  /*\n   the order in which the the data is compared is very important;\n   first try to populate the state from Storage if not set load initialState\n  */\n  const fromLocalStorage = JSON.parse(localStorage.getItem('globalState') as string);\n  const fromSessionStorage = JSON.parse(sessionStorage.getItem('globalState') as string);\n  return fromSessionStorage || fromLocalStorage || initialState;\n}\n","import axios from 'axios';\nimport env from 'react-dotenv';\n\n/** OMDb API\n *  The Open Movie Database\n *  http://www.omdbapi.com/#parameters\n **/\nexport const API_KEY = '&apikey=' + env.API_KEY;\nexport const API_ENDPOINT = 'https://www.omdbapi.com/?s=';\n\nexport function getMovieByTitle(title: string) {\n  // handle promise response at the corresponding component\n  return axios.get(`${API_ENDPOINT}${title}${API_KEY}`);\n}\n","import React, { ReactElement, useContext, useState } from 'react';\nimport { Card, Col } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faImdb } from '@fortawesome/free-brands-svg-icons';\nimport { faHeart, faHeartBroken } from '@fortawesome/free-solid-svg-icons';\nimport { useDoubleTap } from 'use-double-tap';\nimport { MovieType } from '../../../../store/types';\nimport { MovieComponentType } from './types';\nimport { globalContext } from '../../../../store';\nimport './styles.scss';\n\nexport function Movie({ movie }: MovieComponentType): ReactElement {\n  const { globalState, dispatch } = useContext(globalContext);\n  const [isMovieLiked, setMovieLiked] = useState(isMovieInFavorites());\n\n  const doubleTap = useDoubleTap(() => {\n    if (!isMovieLiked) {\n      likeMovie();\n    } else {\n      unlikeMovie();\n    }\n  });\n\n  function isMovieInFavorites() {\n    return globalState.favoriteMovies.some((likedMovie: MovieType) => likedMovie.imdbID === movie.imdbID);\n  }\n\n  function likeMovie() {\n    if (!isMovieLiked) {\n      setMovieLiked(true);\n      dispatch({ type: 'LIKE_MOVIE', payload: movie });\n    }\n  }\n\n  function unlikeMovie() {\n    setMovieLiked(false);\n    dispatch({ type: 'UNLIKE_MOVIE', payload: movie.imdbID });\n  }\n\n  return (\n    <Col className=\"mb-4 movie-container\">\n      <Card className=\"\">\n        <img src={movie.Poster} alt={movie.Title} {...doubleTap} />\n        <Card.Body>\n          <h5 className=\"card-title\">{movie.Title}</h5>\n          <p className=\"card-text\">{movie.Year}</p>\n          <p className=\"card-text\">\n            <a href={`https://www.imdb.com/title/${movie.imdbID}/`} target=\"_blank\" rel=\"noreferrer\">\n              <FontAwesomeIcon icon={faImdb} size=\"4x\" />\n            </a>\n            <span className=\"font-weight-bold\">IMDb: </span>\n            {movie.imdbID.toUpperCase()}\n          </p>\n        </Card.Body>\n        {!isMovieLiked ? (\n          <button type=\"button\" className=\"btn btn-danger remove-btn\" title=\"Like\" onClick={likeMovie}>\n            <FontAwesomeIcon icon={faHeart} />\n          </button>\n        ) : (\n          <button type=\"button\" className=\"btn btn-secondary fav-btn\" title=\"Unlike\" onClick={unlikeMovie}>\n            <FontAwesomeIcon icon={faHeartBroken} />\n          </button>\n        )}\n      </Card>\n    </Col>\n  );\n}\n","import React, { ReactElement } from 'react';\nimport { Container, Row } from 'react-bootstrap';\nimport { Movie } from './components/Movie';\nimport { MoviesComponentType } from './types';\nimport './styles.scss';\n\nexport function Movies({ movies }: MoviesComponentType): ReactElement {\n  return (\n    <Container className=\"main-movies-container\">\n      <Row className=\"d-flex mt-4 flex-wrap justify-content-start align-items-start\">\n        {movies.map((movie: any, index: number) => {\n          return <Movie key={movie.imdbID + index} movie={movie} />;\n        })}\n      </Row>\n    </Container>\n  );\n}\n","import React, { ReactElement, useEffect, useState } from 'react';\nimport { Col, Container, FormControl, InputGroup, Row, Spinner } from 'react-bootstrap';\nimport { getMovieByTitle } from '../../utils/OMDbAPI';\nimport { Movies } from '../Movies';\nimport './styles.scss';\n\nexport function Search(): ReactElement {\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState('');\n  const [searchTerm, setSearchTerm] = useState('');\n  const [cachedSearchTerm, setCachedSearchTerm] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    // debounce the GET request by some time before the user decides the search term\n    // as the user types the states gets updated and clears the previous set timer\n    const withDebounce = setTimeout(() => {\n      if (searchTerm !== cachedSearchTerm) {\n        return getMovie(searchTerm);\n      }\n    }, 600);\n    return () => clearTimeout(withDebounce);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [searchTerm]);\n\n  function handleChange(event: React.ChangeEvent<HTMLInputElement>) {\n    setSearchTerm(event.currentTarget.value);\n  }\n\n  async function getMovie(searchTerm: string) {\n    setIsLoading(true);\n    setCachedSearchTerm(searchTerm);\n    await getMovieByTitle(searchTerm)\n      .then((res: any) => {\n        const data = res.data;\n        if (data.Response === 'True') {\n          setMovies(data.Search);\n          setError('');\n          setIsLoading(false);\n        } else if (data.Response === 'False') {\n          setError(data.Error);\n          setIsLoading(false);\n        }\n      })\n      .catch((error) => {\n        console.error(error);\n        setError(error.message);\n        setIsLoading(false);\n      });\n  }\n\n  return (\n    <Container fluid=\"xl\" className=\"mt-4 search-container\">\n      <Row>\n        <Col md={{ span: 6, offset: 3 }} className=\"d-flex justify-content-center mt-3\">\n          <InputGroup>\n            <FormControl placeholder=\"Search by title\" className=\"rounded-0\" onChange={handleChange} />\n            {isLoading ? (\n              <Spinner animation=\"border\" role=\"status\">\n                <span className=\"d-none\">Loading...</span>\n              </Spinner>\n            ) : null}\n          </InputGroup>\n        </Col>\n        <Col md={{ span: 6, offset: 3 }} className=\"d-flex justify-content-center mt-3\">\n          <p className=\"error-message\">{error}</p>\n        </Col>\n      </Row>\n      <Movies movies={movies} />\n    </Container>\n  );\n}\n","import React, { ReactElement, useContext } from 'react';\nimport { Col, Row } from 'react-bootstrap';\nimport { globalContext } from '../../store';\nimport { Movies } from '../Movies';\n\nexport function Favorites(): ReactElement {\n  const { globalState } = useContext(globalContext);\n\n  return (\n    <Col>\n      <Row className=\"d-flex justify-content-center mt-3\">\n        {globalState.favoriteMovies.length === 0 ? <span>Please like some movies</span> : null}\n      </Row>\n      <Movies movies={globalState.favoriteMovies} />\n    </Col>\n  );\n}\n","import { FormModelType } from 'reactjs-use-form';\n\nexport const formModel: FormModelType = {\n  email: {\n    value: '',\n    required: true,\n  },\n  passphrase: {\n    value: '',\n    required: true,\n    validator: (passphrase) => {\n      return passphrase.length <= 6 ? 'Passphrase must be at least 6 characters long' : '';\n    },\n  },\n};\n","import React, { ReactElement, useContext, useEffect, useRef, useState } from 'react';\nimport { Button, Col, Container, Form, Row, Spinner, ToggleButton } from 'react-bootstrap';\nimport './styles.scss';\nimport { useForm, ValuesType } from 'reactjs-use-form';\nimport { formModel } from './formModel';\nimport { globalContext } from '../../store';\n\nexport function Login(): ReactElement {\n  const { globalState, dispatch } = useContext(globalContext);\n  const [isLoading, setIsLoading] = useState(false);\n  const storageOptions = [\n    { name: 'Session', value: 'sessionStorage' },\n    { name: 'Local', value: 'localStorage' },\n  ];\n  const emailInputRef = useRef<HTMLInputElement>(null);\n  const { values, errors, handleOnChange, handleOnSubmit, isDisabled } = useForm(formModel, handleLogin);\n\n  const { email, passphrase }: ValuesType = values;\n\n  useEffect(() => {\n    if (emailInputRef.current) emailInputRef.current.focus();\n  }, []);\n\n  const fakeAuth = {\n    authenticate(callback: () => void) {\n      setTimeout(callback, 900);\n    },\n  };\n\n  function handleLogin() {\n    setIsLoading(true);\n    fakeAuth.authenticate(() => {\n      dispatch({ type: 'SET_USER', payload: email });\n      dispatch({ type: 'AUTHENTICATE_USER', payload: true });\n    });\n  }\n\n  function handleChange(event: React.ChangeEvent<HTMLInputElement>) {\n    dispatch({ type: 'SET_PERSISTENCE', payload: event.currentTarget.value });\n  }\n\n  return (\n    <Container fluid=\"sm\" className=\"login-container d-flex justify-content-center mt-4 p-0\">\n      <Col className=\"border border-secondary rounded p-4 col-sm-6\">\n        <Form onSubmit={handleOnSubmit}>\n          <Form.Group className=\"mb-3\" controlId=\"email\">\n            <Form.Label>Email address</Form.Label>\n            <Form.Control\n              type=\"email\"\n              name=\"email\"\n              ref={emailInputRef}\n              value={email}\n              size=\"sm\"\n              onChange={handleOnChange}\n              isInvalid={errors.email.hasError}\n            />\n            <Form.Control.Feedback type=\"invalid\">{errors.email.message}</Form.Control.Feedback>\n          </Form.Group>\n          <Form.Group controlId=\"password\">\n            <Form.Label>Passphrase</Form.Label>\n            <Form.Control\n              type=\"password\"\n              name=\"passphrase\"\n              value={passphrase}\n              size=\"sm\"\n              onChange={handleOnChange}\n              isInvalid={errors.passphrase.hasError}\n            />\n            <Form.Control.Feedback type=\"invalid\">{errors.passphrase.message}</Form.Control.Feedback>\n          </Form.Group>\n          <Col className=\"d-flex justify-content-center mt-2\">\n            <Button type=\"submit\" size=\"sm\" variant=\"info\" disabled={isDisabled}>\n              <span>{isLoading ? <Spinner animation=\"grow\" variant=\"light\" size=\"sm\" /> : 'Log In'}</span>\n            </Button>\n          </Col>\n          <Row className=\"d-flex justify-content-center mt-2\">\n            <Col className=\"mb-3 storage-container\">\n              <Row className=\"d-flex justify-content-center\">\n                <Form.Label className=\"mb-0 text-label\">Storage Persistence</Form.Label>\n              </Row>\n              <Row className=\"d-flex justify-content-center\">\n                {storageOptions.map((radio, index) => (\n                  <ToggleButton\n                    key={index}\n                    id={`radio-${index}`}\n                    type=\"radio\"\n                    size=\"sm\"\n                    variant=\"outline-secondary\"\n                    name=\"radio\"\n                    className={index === 0 ? 'mr-2' : ''}\n                    value={radio.value}\n                    checked={radio.value === globalState.persistenceType}\n                    onChange={handleChange}\n                  >\n                    <span> {radio.name}</span>\n                  </ToggleButton>\n                ))}\n              </Row>\n            </Col>\n          </Row>\n        </Form>\n      </Col>\n    </Container>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/logo.4562cdbe.png\";","import React, { ReactElement, useContext } from 'react';\nimport { NavLink, useHistory } from 'react-router-dom';\nimport { Dropdown, DropdownButton, Nav, Navbar } from 'react-bootstrap';\nimport { faDatabase, faPowerOff } from '@fortawesome/free-solid-svg-icons';\nimport { globalContext } from '../../store';\nimport './styles.scss';\nimport logo from './logo.png';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nexport function Header(): ReactElement {\n  const { globalState, dispatch } = useContext(globalContext);\n  const history = useHistory();\n\n  async function handleLogout() {\n    await dispatch({ type: 'PURGE_STATE' });\n    return history.push('/login');\n  }\n\n  return (\n    <Navbar collapseOnSelect expand=\"md\" variant=\"dark\" className=\"header\">\n      <Navbar.Brand>\n        <img src={logo} alt=\"logo\" className=\"logo\" />\n        <span className=\"brand\">\n          Movie<span className=\"font-weight-bold\">Lab</span>\n        </span>\n      </Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n      <Navbar.Collapse id=\"responsive-navbar-nav\">\n        <Nav className=\"mr-auto\">\n          <NavLink to=\"/search\" activeClassName=\"active\" className=\"mr-3\">\n            <span>Search</span>\n          </NavLink>\n          <NavLink to=\"/favorites\" activeClassName=\"active\">\n            <span>Favorites</span>\n          </NavLink>\n        </Nav>\n        {globalState.loggedUser ? (\n          <Nav>\n            <DropdownButton variant=\"info\" menuAlign=\"right\" size=\"sm\" title={globalState.loggedUser} id=\"user-menu\">\n              <Dropdown.Item>\n                <FontAwesomeIcon icon={faDatabase} />\n                {globalState.persistenceType === 'sessionStorage' ? 'Session Storage' : 'Local Storage'}\n              </Dropdown.Item>\n              <Dropdown.Divider />\n              <Dropdown.Item eventKey=\"1\" onClick={handleLogout}>\n                <FontAwesomeIcon icon={faPowerOff} /> Logout\n              </Dropdown.Item>\n            </DropdownButton>\n          </Nav>\n        ) : null}\n      </Navbar.Collapse>\n    </Navbar>\n  );\n}\n","import React, { ReactElement, useContext } from 'react';\nimport { Redirect, Route } from 'react-router-dom';\nimport { globalContext } from '../store';\nimport { PrivateRouteComponentType } from './types';\n\nexport function PrivateRoute({ component: Component, path, exact, pathname }: PrivateRouteComponentType): ReactElement {\n  const { globalState } = useContext(globalContext);\n\n  return (\n    <Route {...path} {...exact}>\n      {globalState.isUserAuthenticated ? <Component /> : <Redirect to=\"/login\" from={pathname} />}\n    </Route>\n  );\n}\n","import React, { ReactElement, useContext } from 'react';\nimport { Redirect, Route, Switch, useLocation } from 'react-router-dom';\nimport { Container } from 'react-bootstrap';\nimport { Search } from '../components/Search';\nimport { Favorites } from '../components/Favorites';\nimport { Login } from '../components/Login';\nimport { Header } from '../components/Header';\nimport { PrivateRoute } from './PrivateRoute';\nimport { globalContext } from '../store';\n\nexport function RouterView(): ReactElement {\n  const { globalState } = useContext(globalContext);\n  const location = useLocation();\n  const { pathname } = location;\n\n  return (\n    <Container fluid className=\"p-0\">\n      <Header />\n      <Switch>\n        <Route exact path=\"/\">\n          <Redirect to=\"/login\" />\n        </Route>\n        <PrivateRoute exact path=\"/search\" pathname={pathname} component={Search} />\n        <PrivateRoute exact path=\"/favorites\" pathname={pathname} component={Favorites} />\n        <Route exact path=\"/login\">\n          {globalState.isUserAuthenticated ? <Redirect to=\"/favorites\" from={pathname} /> : <Login />}\n        </Route>\n      </Switch>\n    </Container>\n  );\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './styles/globalStylesheet.scss';\nimport { GlobalStore } from './store';\nimport { RouterView } from './router/RouterView';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <GlobalStore>\n      <BrowserRouter basename=\"https://amiroff157.github.io/movie-lab\">\n        <RouterView />\n      </BrowserRouter>\n    </GlobalStore>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}